import ctypes
class DynamicArray(object):
    
    def __init__(self):
        self.n=0
        self.cap=1
        self.A=self.make_array(self.cap)
    def _len_(self):
        return self.n
    def _getitem_(self,k):
        if not 0<=k<self.n:
            return IndexError("k is out of bounds")
        else:
            return self.A[k]
    def append(self,ele):
        if  self.n==self.cap:
            self._resize(2*self.cap)
        else:
            self.A[self.n]=ele
            self.n+=1
    def _resize(self,new_cap):
        B=self.make_array(new_cap)
        for i in range(0,self.n):
            B[i]=self.A[i]
        self.A=B
        self.cap=new_cap
    def make_array(self,new_cap):
        return(new_cap*ctypes.py_object)()
        
